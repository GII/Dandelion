<?xml version="1.0"  encoding="UTF-8"?>

<xs:schema version="1.0"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           elementFormDefault="qualified"
           targetNamespace="http://www.usixml.eu/aui"
           xmlns:aui="http://www.usixml.eu/aui">
          
    
    
    <xs:complexType name="AbstractLocalization">
        <xs:attribute name="languageCode" type="xs:string"/>
        <xs:attribute name="label" type="xs:string"/>
        <xs:attribute name="helpText" type="xs:string"/>
    </xs:complexType>
    
    <xs:complexType name="AbstractTemplate">
        <xs:attribute name="templateName" type="xs:string"/>
        <xs:attribute name="isSuperseded" type="xs:boolean"/>
    </xs:complexType>
    
    <xs:complexType name="Constraint">
    </xs:complexType>
     
            
            
    <!-- composition -->
    <xs:complexType name="Composition">
        
        <xs:sequence>
            <xs:element name="AbstractInteractionUnit" type="aui:AbstractInteractionUnit" minOccurs="1" maxOccurs="unbounded"/>
        </xs:sequence>
        
        <xs:attribute name="rationale" type="xs:string"/>
        <xs:attribute name="role" type="xs:string"/>       
        
    </xs:complexType>
    
    
    
    <!-- presentation support -->
    <xs:complexType name="PresentationSupport">
        <xs:attribute name="id" type="xs:string"/>
    </xs:complexType>
    
    <xs:simpleType name="EnumDataType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="boolean"/>
            <xs:enumeration value="hour"/>
            <xs:enumeration value="date"/>
            <xs:enumeration value="natural"/>
            <xs:enumeration value="integer"/>
            <xs:enumeration value="real"/>
            <xs:enumeration value="text"/>
            <xs:enumeration value="secret"/>
            <xs:enumeration value="array"/>
            <xs:enumeration value="media_image"/>
            <xs:enumeration value="media_audio"/>
            <xs:enumeration value="media_video"/>
        </xs:restriction>
    </xs:simpleType>
    
    <xs:complexType name="DataInputOutputSupport">
        <xs:complexContent>
            <xs:extension base="aui:PresentationSupport">
                
                <xs:sequence>
                    <xs:element name="dataType" type="aui:EnumDataType" minOccurs="1" maxOccurs="1"/>
                </xs:sequence>
                
                <xs:attribute name="minCardinality" type="xs:integer"/>
                <xs:attribute name="maxCardinality" type="xs:integer"/> 
                <xs:attribute name="defaultValue" type="xs:string"/>                
                <xs:attribute name="dataLength" type="xs:integer"/>                        
                <xs:attribute name="dataFormat" type="xs:string"/>
                <xs:attribute name="range" type="xs:string"/>
                <xs:attribute name="ioFacet" type="xs:string"/>
                <xs:attribute name="isDynamic" type="xs:boolean"/>
                <xs:attribute name="isRelevant" type="xs:boolean"/>
                <xs:attribute name="patternMatching" type="xs:string"/>
                <xs:attribute name="inputSupport" type="xs:boolean"/>
                <xs:attribute name="outputSupport" type="xs:boolean"/>
                
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    
    <xs:simpleType name="EnumSelectionType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="undefined"/>
            <xs:enumeration value="no_selection"/>
            <xs:enumeration value="single_selection"/>
            <xs:enumeration value="single_interval"/>
            <xs:enumeration value="multiple_interval"/>
        </xs:restriction>
    </xs:simpleType>
    
    <xs:complexType name="DataSelectionSupport">
        <xs:complexContent>
            <xs:extension base="aui:PresentationSupport">               
                
                <xs:sequence>
                    <xs:element name="dataType" type="aui:EnumDataType" minOccurs="1" maxOccurs="1"/>
                    <xs:element name="selectionType" type="aui:EnumSelectionType" minOccurs="1" maxOccurs="1"/>
                </xs:sequence>
                
                <xs:attribute name="start" type="xs:integer"/>
                <xs:attribute name="end" type="xs:integer"/> 
                <xs:attribute name="step" type="xs:integer"/>                
                <xs:attribute name="isExpandable" type="xs:boolean"/>
                <xs:attribute name="isContinuous" type="xs:boolean"/>
                <xs:attribute name="isRating" type="xs:boolean"/>
                <xs:attribute name="isSecret" type="xs:boolean"/>
                
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    
    <xs:complexType name="DataFilterSupport">
        <xs:complexContent>
            <xs:extension base="aui:DataSelectionSupport">
                <xs:attribute name="filterType" type="xs:string"/>
                <xs:attribute name="filterCondition" type="xs:string"/> 
                <xs:attribute name="filterProperty" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    
    
    
    <!-- event support -->
    <xs:complexType name="EventSupport">
        <xs:attribute name="id" type="xs:string"/>
    </xs:complexType>

    <xs:simpleType name="EnumTriggerType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="navigation"/>
            <xs:enumeration value="operation"/>
            <xs:enumeration value="operation_navigation"/>
        </xs:restriction>
    </xs:simpleType>
        
                
    <xs:complexType name="TriggerSupport">
        <xs:complexContent>
            <xs:extension base="aui:EventSupport">
                
                <xs:sequence>
                    <xs:element name="triggerType" type="aui:EnumTriggerType" minOccurs="1" maxOccurs="1"/>
                </xs:sequence>
                
                <xs:attribute name="triggerExpression" type="xs:string"/>                
                <xs:attribute name="requiresConfirmation" type="xs:boolean"/>
                
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    

            
    <!-- abstract interaction unit -->
    <xs:complexType name="AbstractInteractionUnit">
               
        <xs:sequence>
            <xs:element name="Composition" type="aui:Composition" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="DataInputOutputSupport" type="aui:DataInputOutputSupport" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="DataSelectionSupport" type="aui:DataSelectionSupport" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="TriggerSupport" type="aui:TriggerSupport" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
                    
        <xs:attribute name="id" type="xs:string"/>
        <xs:attribute name="name" type="xs:string"/>
        <xs:attribute name="role" type="xs:string"/>
        <xs:attribute name="importanceLevel" type="xs:integer"/>
        <xs:attribute name="securityLevel" type="xs:string"/>
        <xs:attribute name="isCompound" type="xs:boolean"/>
        <xs:attribute name="state" type="xs:string"/>
        <xs:attribute name="frequency" type="xs:float"/>
        <xs:attribute name="repetitionFactor" type="xs:integer"/>
        <xs:attribute name="domainReference" type="xs:string"/>
        <xs:attribute name="isLocalisable" type="xs:string"/>
                    
    </xs:complexType>


    <!-- abstract ui model -->
    <xs:complexType name="AbstractUIModel">
        <xs:sequence>
            <xs:element name="AbstractInteractionUnit" type="aui:AbstractInteractionUnit" minOccurs="1" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
        
    <xs:element name="UserInterfaceModel">
        <xs:complexType>
            
            <xs:sequence>
                <xs:element name="AbstractUIModel" type="aui:AbstractUIModel" minOccurs="1" maxOccurs="1"/>
            </xs:sequence>
            
            <xs:attribute name="useCase" type="xs:string"/>
            
        </xs:complexType>
    </xs:element>

</xs:schema>
