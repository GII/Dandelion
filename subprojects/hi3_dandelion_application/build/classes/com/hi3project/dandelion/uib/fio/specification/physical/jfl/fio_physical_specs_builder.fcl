FUNCTION_BLOCK fio_physical_specs_builder

VAR_INPUT

        scene_activity_mode: REAL;
        scene_activity_type: REAL;
        scene_activity_style: REAL;

        scene_user_count: REAL;

        env_space: REAL;

        env_motion: REAL;
	env_situation: REAL;
	env_type: REAL;

END_VAR


VAR_OUTPUT

	fio_physical_size: REAL;

	fio_physical_status: REAL;

        fio_physical_distance: REAL;

END_VAR


FUZZIFY scene_activity_mode
        TERM on_the_go := (0, 1) (3.75, 1) (6.25, 0);
        TERM stationary := (5, 0) (6.25, 1) (10, 1);
END_FUZZIFY

FUZZIFY scene_activity_style
        TERM individual := (0, 1) (3.75, 1) (6.25, 0);
        TERM social := (5, 0) (6.25, 1) (10, 1);
END_FUZZIFY

FUZZIFY scene_activity_type
        TERM work := (0, 1) (2.5, 1) (3.75, 0);
        TERM daily := trape 2.5 3.75 5 6.25;
        TERM fitness := trape 5 6.25 7.5 8.75;
        TERM leisure := (7.5, 0) (8.75, 1) (10, 1);
END_FUZZIFY



FUZZIFY scene_user_count
        TERM single := (0, 1) (2.5, 1) (3.75, 0);
        TERM two := trape 2.5 3.75 5 6.25;
        TERM multiple := trape 5 6.25 7.5 8.75;
        TERM crowd := (7.5, 0) (8.75, 1) (10, 1);
END_FUZZIFY



FUZZIFY env_motion
	TERM low := (0, 1) (1.25, 1) (2.5, 0);
	TERM normal := trape 1.25 2.5 5 6.25;
	TERM high := trape 5 6.25 7.5 8.75;
	TERM very_high := (7.5, 0) (8.75, 1) (10, 1);
END_FUZZIFY


FUZZIFY env_space
	TERM small := (0, 1) (1.25, 1) (2.5, 0);
	TERM medium := trape 1.25 2.5 5 6.25;
	TERM large := trape 5 6.25 7.5 8.75;
	TERM very_large := (7.5, 0) (8.75, 1) (10, 1);
END_FUZZIFY


FUZZIFY env_situation
	TERM indoor := (0, 1) (3.75, 1) (6.25, 0);
        TERM outdoor := (5, 0) (6.25, 1) (10, 1);
END_FUZZIFY

FUZZIFY env_type
	TERM mobile := (0, 1) (3.75, 1) (6.25, 0);
        TERM stationary := (5, 0) (6.25, 1) (10, 1);
END_FUZZIFY



//---------- OUTPUT -----------

DEFUZZIFY fio_physical_size
	TERM very_small := (0,1) (1.25,1) (2.5,0);
	TERM small := (2.5,0) (3.75, 1) (5,0);
	TERM medium := (5,0) (6.25,1) (7.5,0);
	TERM big := (7.5,0) (8.75,1) (10,1);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY


DEFUZZIFY fio_physical_status
	TERM mobile := (0,1) (1.25,1) (2.5,0);
	TERM portable := (2.5,0) (3.75, 1) (5,0);
	TERM stationary := (5,0) (6.25,1) (7.5,0);
	TERM unknown := (7.5,0) (8.75,1) (10,1);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY


DEFUZZIFY fio_physical_distance //centimeters
	TERM very_close := (0,1) (40,1) (70,0);
	TERM close := (70,0) (100, 1) (150,0);
	TERM same_room := (150,0) (200,1) (500,0);
	TERM far := (500,0) (700,1) (10000,1);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY



RULEBLOCK No1
	AND : MIN;			// Use 'min' for 'and' (also implicit use 'max' for 'or' to fulfill DeMorgan's Law)
	ACT : MIN;			// Use 'min' activation method
	ACCU : MAX;			// Use 'max' accumulation method


        //PHYSICAL SIZE 
        RULE 1: IF scene_activity_mode IS on_the_go
            AND scene_activity_style IS individual
            THEN fio_physical_size IS very_small;

        RULE 2: IF scene_activity_mode IS on_the_go
            AND scene_activity_style IS individual
            THEN fio_physical_status IS mobile;

        RULE 3: IF scene_activity_mode IS on_the_go
            AND scene_activity_style IS social
            THEN fio_physical_size IS small;

        RULE 4: IF scene_activity_mode IS on_the_go
            AND scene_activity_style IS social
            THEN fio_physical_status IS portable;

        RULE 5: IF scene_activity_mode IS stationary
            AND scene_activity_style IS individual
            THEN fio_physical_size IS medium;

        RULE 6: IF scene_activity_mode IS stationary
            AND scene_activity_style IS social
            THEN fio_physical_size IS big;

        RULE 7: IF scene_activity_mode IS stationary
            THEN fio_physical_status IS stationary;


        //ACTIVITY TYPE
        RULE 8: IF scene_activity_type IS fitness
            THEN fio_physical_size IS very_small;

        RULE 9: IF scene_activity_type IS fitness
            THEN fio_physical_status IS mobile;

        RULE 10: IF scene_activity_type IS work
            AND scene_activity_style IS individual
            THEN fio_physical_size IS medium;

        RULE 11: IF scene_activity_type IS work
            AND scene_activity_style IS individual
            AND scene_activity_mode IS on_the_go
            THEN fio_physical_status IS portable;

        RULE 12: IF scene_activity_type IS work
            AND scene_activity_style IS individual
            AND scene_activity_mode IS stationary
            THEN fio_physical_status IS stationary;

        RULE 13: IF scene_activity_type IS work
            AND scene_activity_style IS social
            THEN fio_physical_size IS big;

        RULE 14: IF scene_activity_type IS work
            AND scene_activity_style IS social
            AND scene_activity_mode IS on_the_go
            THEN fio_physical_status IS portable;

        RULE 15: IF scene_activity_type IS work
            AND scene_activity_style IS social
            AND scene_activity_mode IS stationary
            THEN fio_physical_status IS stationary;

        RULE 16: IF scene_activity_type IS daily
            AND scene_activity_style IS individual
            THEN fio_physical_size IS small;

        RULE 17: IF scene_activity_type IS daily
            AND scene_activity_style IS social
            THEN fio_physical_size IS medium; 

        RULE 18: IF scene_activity_type IS daily
            THEN fio_physical_status IS mobile;

        RULE 19: IF scene_activity_type IS leisure
            AND scene_activity_style IS individual
            AND scene_activity_mode IS on_the_go
            THEN fio_physical_size IS small;

        RULE 20: IF scene_activity_type IS leisure
            AND scene_activity_style IS individual
            AND scene_activity_mode IS on_the_go
            THEN fio_physical_status IS mobile;


        RULE 22: IF scene_activity_type IS leisure
            AND scene_activity_style IS individual
            AND scene_activity_mode IS stationary
            THEN fio_physical_size IS medium;

        RULE 23: IF scene_activity_type IS leisure
            AND scene_activity_style IS social
            THEN fio_physical_size IS big;

        RULE 24: IF scene_activity_type IS leisure
            AND scene_activity_style IS social
            AND scene_activity_mode IS on_the_go
            THEN fio_physical_size IS small;

        RULE 25: IF scene_activity_type IS leisure
            AND scene_activity_style IS social
            AND scene_activity_mode IS stationary
            THEN fio_physical_size IS big;

        RULE 32: IF env_type IS mobile
            THEN fio_physical_size IS small;

        RULE 33: IF env_type IS stationary
            THEN fio_physical_size IS big;




        //DISTANCE
        RULE 9: IF scene_activity_type IS fitness
            THEN fio_physical_distance IS very_close;

        RULE 10: IF scene_activity_type IS work
            AND scene_activity_style IS individual
            THEN fio_physical_distance IS close;

        RULE 11: IF scene_activity_type IS work
            AND scene_activity_style IS individual
            AND scene_activity_mode IS on_the_go
            THEN fio_physical_distance IS very_close;

        RULE 12: IF scene_activity_type IS work
            AND scene_activity_style IS individual
            AND scene_activity_mode IS stationary
            THEN fio_physical_distance IS close;

        RULE 13: IF scene_activity_type IS work
            AND scene_activity_style IS social
            THEN fio_physical_distance IS same_room;

        RULE 14: IF scene_activity_type IS work
            AND scene_activity_style IS social
            AND scene_activity_mode IS on_the_go
            THEN fio_physical_distance IS close;

        RULE 15: IF scene_activity_type IS work
            AND scene_activity_style IS social
            AND scene_activity_mode IS stationary
            THEN fio_physical_distance IS far;

        RULE 16: IF scene_activity_type IS daily
            AND scene_activity_style IS individual
            THEN fio_physical_distance IS close;

        RULE 17: IF scene_activity_type IS daily
            AND scene_activity_style IS social
            THEN fio_physical_distance IS same_room; 

        RULE 20: IF scene_activity_type IS leisure
            AND scene_activity_style IS individual
            AND scene_activity_mode IS on_the_go
            THEN fio_physical_distance IS very_close;

        RULE 23: IF scene_activity_type IS leisure
            AND scene_activity_style IS individual
            AND scene_activity_mode IS stationary
            THEN fio_physical_distance IS same_room;

        RULE 24: IF scene_activity_type IS leisure
            AND scene_activity_style IS individual
            THEN fio_physical_distance IS close;

        RULE 25: IF scene_activity_type IS leisure
            AND scene_activity_style IS social
            AND scene_activity_mode IS on_the_go
            THEN fio_physical_distance IS close;

        RULE 26: IF env_space IS small
            THEN fio_physical_distance IS very_close;

        RULE 27: IF env_space IS medium
            THEN fio_physical_distance IS close;

        RULE 28: IF env_space IS large
            THEN fio_physical_distance IS same_room;

        RULE 29: IF env_type IS mobile
            THEN fio_physical_distance IS very_close;

        RULE 30: IF env_type IS stationary
            THEN fio_physical_distance IS close;

        RULE 31: IF scene_activity_mode IS on_the_go
            THEN fio_physical_distance IS very_close;


END_RULEBLOCK


END_FUNCTION_BLOCK
